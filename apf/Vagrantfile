# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|


  config.vm.network "forwarded_port", guest: 50000, host: 50000, host_ip: "0.0.0.0", id: "db2express-c", auto_correct: true


  config.vm.box = "petergdoyle/CentOS-7-x86_64-Minimal-1503-01"

  config.vm.provider "virtualbox" do |vb|
    vb.customize ["modifyvm", :id, "--cpuexecutioncap", "80"]
    vb.cpus=2
    vb.memory = "1024"
  end


  config.vm.provision "shell", inline: <<-SHELL

# Global Proxy Settings
#export HTTP_PROXY=http://myproxy.net:80
#export HTTPS_PROXY=$HTTP_PROXY http_proxy=$HTTP_PROXY https_proxy=$HTTP_PROXY
#echo "py=$HTTP_PROXY" >> /etc/yum.conf
#cat >/etc/profile.d/proxy.sh <<-EOF
#export HTTP_PROXY=$HTTP_PROXY
#export HTTPS_PROXY=$HTTP_PROXY
#export http_proxy=$HTTP_PROXY
#export https_proxy=$HTTP_PROXY
#EOF

    if [ -n "$HTTP_PROXY" ]; then
      curl -I -x $HTTP_PROXY http://google.com
      if [ $? -ne 0 ]; then
        echo "invalid proxy settings. cannot continue"
        exit 1
      fi
    fi

    #best to update the os
    yum -y update
    #install additional tools
    yum -y install vim htop curl wget tree unzip telnet net-tools bash-completion

    eval 'docker --version' > /dev/null 2>&1
    if [ $? -eq 127 ]; then
    #install docker service
    cat >/etc/yum.repos.d/docker.repo <<-EOF
[dockerrepo]
name=Docker Repository
baseurl=https://yum.dockerproject.org/repo/main/centos/7
enabled=1
gpgcheck=1
gpgkey=https://yum.dockerproject.org/gpg
EOF
    yum -y install docker
    systemctl start docker.service
    systemctl enable docker.service

    #allow non-#access to run docker commands for user vagrant
    #if you have problems running docker as the vagrant user on the vm (if you 'vagrant ssh'd in
    #after a 'vagrant up'), then
    #restart the host machine and ssh in again to the vm 'vagrant halt; vagrant up; vagrant ssh'
    groupadd docker
    usermod -aG docker vagrant

    #install docker-compose.
    #Compose is a tool for defining and running multi-container applications with Docker.
    yum -y install python-pip
    pip install -U docker-compose
    else
      echo -e "\e[7;40;92mdocker already appears to be installed. skipping.\e[0m"
    fi

    eval 'java -version' > /dev/null 2>&1
    if [ $? -eq 127 ]; then
      mkdir -p /usr/java
      #install java jdk 8 from oracle
      curl -O -L --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" \
      "http://download.oracle.com/otn-pub/java/jdk/8u60-b27/jdk-8u60-linux-x64.tar.gz" \
        && tar -xvf jdk-8u60-linux-x64.tar.gz -C /usr/java \
        && ln -s /usr/java/jdk1.8.0_60/ /usr/java/default \
        && rm -f jdk-8u60-linux-x64.tar.gz

      alternatives --install "/usr/bin/java" "java" "/usr/java/default/bin/java" 99999; \
      alternatives --install "/usr/bin/javac" "javac" "/usr/java/default/bin/javac" 99999; \
      alternatives --install "/usr/bin/javaws" "javaws" "/usr/java/default/bin/javaws" 99999; \
      alternatives --install "/usr/bin/jvisualvm" "jvisualvm" "/usr/java/default/bin/jvisualvm" 99999

export JAVA_HOME=/usr/java/default
cat >/etc/profile.d/java.sh <<-EOF
export JAVA_HOME=$JAVA_HOME
EOF

    else
      echo -e "\e[7;40;92mjava already appears to be installed. skipping.\e[0m"
    fi


    eval 'mvn -version' > /dev/null 2>&1
    if [ $? -eq 127 ]; then
    mkdir /usr/maven
    #install maven
    curl -O http://www.eu.apache.org/dist/maven/maven-3/3.3.3/binaries/apache-maven-3.3.3-bin.tar.gz \
      && tar -xvf apache-maven-3.3.3-bin.tar.gz -C /usr/maven \
      && ln -s /usr/maven/apache-maven-3.3.3 /usr/maven/default \
      && rm -f apache-maven-3.3.3-bin.tar.gz

    alternatives --install "/usr/bin/mvn" "mvn" "/usr/maven/default/bin/mvn" 99999

export MAVEN_HOME=/usr/maven/default
cat >/etc/profile.d/maven.sh <<-EOF
export MAVEN_HOME=$MAVEN_HOME
EOF

    else
      echo -e "\e[7;40;92mmaven already appears to be installed. skipping.\e[0m"
    fi

  #set hostname
  hostnamectl set-hostname apfvm.vbx

  SHELL
end
